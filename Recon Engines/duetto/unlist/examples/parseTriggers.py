#!/usr/bin/env python

# This python script parses "ListDecode -T" text output and generates
# matlab code corresponding to the triggers in the list file.
#
# Other notes:
# - Use grep "Type(0)" to filter for respiratory triggers.
# - Use grep "Type(1)" to filter for cardiac triggers.

# author: B. Flanagan

import os, sys, optparse

class CCmdLine:
    def __init__(self):
        # if args are invalid, print usage and exit program
        self.cmdLine = optparse.OptionParser(usage="%prog <text file path with triggers> <first msec in list file>",
            description="Parse a text file containing triggers from a list file.")

        self.cmdOpt, self.cmdArgs = self.cmdLine.parse_args()

        if (len(self.cmdArgs) != 2):
            self.cmdLine.print_help()
            sys.exit(1)

    def GetCmdName(self):
        return self.cmdLine.get_prog_name()

    def GetFilePath(self):
        return self.cmdArgs[0]

    def GetFirstMsec(self):
        return int(self.cmdArgs[1])

# cmdLine = CCmdLine(epilog=
#"""Run "ListDecode -T <list file>" to extract triggers from the list file.\n

# Use grep "Type(0)" to filter for respiratory triggers.\n
# Use grep "Type(1)" to filter for cardiac triggers.\n

# Use "ListDecode -xyz <list file> | head" to find the first timestamp in the list file
# or use "hdfview <list file>" and find "/HeaderData/ListHeader/firstTmAbsTimeStamp"

# Notes:\n
#   The gated frame for all bins will start on the first trigger and end on the last trigger 
#   so the gated frame msecs is the last trigger timestamp minus the first trigger timestamp.

# Example input file format for respiratory triggers:

# Offset(0x00f8814) : Trigger : Type(0) TimeStamp(  4693.0) Interval(   0.000) EvtTrigCnt(  2) FileTrigCnt(  1) Prompts(168819)
# Offset(0x0a6625a) : Trigger : Type(0) TimeStamp(  8694.0) Interval(4001.000) EvtTrigCnt(  3) FileTrigCnt(  2) Prompts(1639703)
# ...
# """)
# cmdLine = CCmdLine(epilog=

# TODO: process input below as command line arguments
# filePath  = "/localdata/liveTimeBinning/list/respTriggers.txt";
# firstMsec = 4281 # ref /HeaderData/ListHeader/firstTmAbsTimeStamp

cmdLine = CCmdLine()

fileIn = open(cmdLine.GetFilePath(), "r")

firstTriggerMsec = 0
lastTriggerMsec  = 0

triggerCnt = 0
for line in fileIn:
    triggerCnt += 1

maxTriggersPerLine = 20
print "%% Matlab code generated by '%s' based on '%s'" % (cmdLine.GetCmdName(), cmdLine.GetFilePath())
print "%% All msec values are zero relative to the first timestamp in the list file: %d" % (cmdLine.GetFirstMsec())
print "% Ref: HDF5 list file at '/HeaderData/ListHeader/firstTmAbsTimeStamp'"
print "%% triggerCnt=%d, triggerIntervals=%d" % (triggerCnt, triggerCnt-1)
print "rx.startMsecVec = [ ..."

fileIn.seek(0, 0)
triggerId = 0
bIndent   = 1
for line in fileIn:
    token = line.split("(")
    if len(token) < 4:
        continue
    trigger = token[3].split(".")
    start   = int(trigger[0])
    lastMsec = start - cmdLine.GetFirstMsec()
    if (firstTriggerMsec == 0):
        firstTriggerMsec = lastMsec     # save first trigger
    triggerId += 1
    if triggerId >= triggerCnt:         # last trigger is end of list file
        if (lastTriggerMsec == 0):
            lastTriggerMsec = lastMsec  # save last trigger
        break
    if (bIndent == 1):
        print "   ",
        bIndent = 0;
    print "%5d" % (lastMsec),
    if ((triggerId % maxTriggersPerLine) == 0):
        print "..."                     # end the line
        bIndent = 1

if bIndent == 0:
    print "..."
print "];"

print
print "rx.endMsecVec = [ ..."
fileIn.seek(0, 0)
triggerId = 0
bIndent   = 1
for line in fileIn:
    token = line.split("(")
    if len(token) < 4:
        continue
    trigger = token[3].split(".")
    start   = int(trigger[0])
    lastMsec = start - cmdLine.GetFirstMsec()
    triggerId += 1
    if (triggerId == 1):
        continue
    if (bIndent == 1):
        print "   ",
        bIndent = 0;
    print "%5d" % (lastMsec),
    if ((triggerId % maxTriggersPerLine) == 0):
        print "..."                     # end the line
        bIndent = 1

if bIndent == 0:
    print "..."
print "];"
print
print "% The gated frame for all bins starts on the first trigger and ends on the last trigger."
print "rx.gatedframeMsecs=%d" % (lastTriggerMsec - firstTriggerMsec)

print
print "Copy/paste the Matlab code above to your test script (e.g. testUnlistGated_<x>.m)."
print "firstTriggerMsec=%d, lastTriggerMsec=%d" % (firstTriggerMsec, lastTriggerMsec)
print

